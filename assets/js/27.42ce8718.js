(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{170:function(a,e,i){"use strict";i.r(e);var _=i(0),t=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,i=a._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"命令集合"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#命令集合","aria-hidden":"true"}},[a._v("#")]),a._v(" 命令集合")]),a._v(" "),i("h2",{attrs:{id:"索引"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"#mac"}},[a._v("mac")])]),a._v(" "),i("li",[i("a",{attrs:{href:"#linux"}},[a._v("linux")])]),a._v(" "),i("li",[i("a",{attrs:{href:"#mysql"}},[a._v("mysql")])]),a._v(" "),i("li",[i("a",{attrs:{href:"#nginx"}},[a._v("nginx")])]),a._v(" "),i("li",[i("a",{attrs:{href:"#pm2"}},[a._v("pm2")])]),a._v(" "),i("li",[i("a",{attrs:{href:"#docker"}},[a._v("docker")])]),a._v(" "),i("li",[i("a",{attrs:{href:"%E5%85%B6%E4%BB%96"}},[a._v("其他")])])]),a._v(" "),i("h2",{attrs:{id:"mac"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#mac","aria-hidden":"true"}},[a._v("#")]),a._v(" mac")]),a._v(" "),i("ol",[i("li",[a._v("put localxx  serverxx    //sftp 文件传输")]),a._v(" "),i("li",[a._v("ssh -p 端口号 username@服务器ip    //ssh登录服务器")]),a._v(" "),i("li",[a._v("scp -P端口号 本地文件路径 username@服务器ip:目的路径   //上传文件至服务器")]),a._v(" "),i("li",[a._v("scp -P端口号 username@ip:路径 本地路径     //从服务器下载文件到本地")])]),a._v(" "),i("h2",{attrs:{id:"其他"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),i("ol",[i("li",[a._v("ipconfig               //windows查看ip配置")]),a._v(" "),i("li",[a._v("pip install XXX        //python安装模块")])]),a._v(" "),i("h2",{attrs:{id:"linux"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#linux","aria-hidden":"true"}},[a._v("#")]),a._v(" linux")]),a._v(" "),i("ol",[i("li",[a._v("netstat -nlp|grep 8080")]),a._v(" "),i("li",[a._v("kill -9 xxx")]),a._v(" "),i("li",[a._v("tail -f catalina.out")]),a._v(" "),i("li",[a._v("rm xxx")]),a._v(" "),i("li",[a._v("find ./ -name filename")]),a._v(" "),i("li",[a._v("./startup.sh")]),a._v(" "),i("li",[a._v("chmod 777 XXX                                //赋予文件权限")]),a._v(" "),i("li",[a._v("lsof -i                                      //显示符合条件的进程情况")]),a._v(" "),i("li",[a._v("lsof -i:端口号                               //显示固定端口的进程情况")]),a._v(" "),i("li",[a._v("netstat -tunlp")]),a._v(" "),i("li",[a._v("vi filename                                 //编辑xxx文件\ni                                       //插入\nesc + :q！                                  //退出不保存\nesc + :wq！                                 //退出保存\ncat filename                                //查看有没有成功")]),a._v(" "),i("li",[a._v("mkdir filename                               //新建文件夹")])]),a._v(" "),i("h2",{attrs:{id:"nginx"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[a._v("#")]),a._v(" nginx")]),a._v(" "),i("ol",[i("li",[a._v("start nginx")]),a._v(" "),i("li",[a._v("nginx -s reload")])]),a._v(" "),i("h2",{attrs:{id:"mysql"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#mysql","aria-hidden":"true"}},[a._v("#")]),a._v(" mysql")]),a._v(" "),i("ol",[i("li",[a._v("mysql -h localhost -u root -p                //连接数据库")]),a._v(" "),i("li",[a._v("show databases;                              //显示数据库")]),a._v(" "),i("li",[a._v("use databasename;                            //使用databasename数据库")]),a._v(" "),i("li",[a._v("show tables;                                 //显示数据表")]),a._v(" "),i("li",[a._v("describe tablename;                          //显示tablename表结构")]),a._v(" "),i("li",[a._v("create database name;                        //创建数据库")]),a._v(" "),i("li",[a._v("drop database name                           //直接删除数据库，不提醒")]),a._v(" "),i("li",[a._v("if exists()  end if;                         //判断是够存在,（）中可以写select语句")]),a._v(" "),i("li",[a._v("select a into @a from table where "),i("em",[a._v("=")]),a._v(";       //从表中某条数据中取出某字段")]),a._v(" "),i("li",[a._v("select count(*) into @allcnt from table;     //取出表中数据的个数")]),a._v(" "),i("li",[a._v("call function(a,b,c);                        //执行函数")]),a._v(" "),i("li",[a._v("select date_format(NOW(),'TR%Y%m%d%H%i%s');  //日期转字符串，注意赋值的时侯（）包起来")]),a._v(" "),i("li",[a._v("set a=now();                                 //赋值语句")]),a._v(" "),i("li",[a._v("select  GROUP_CONCAT(d.depotid separator ',') waterstation \tfrom t_water_user_bind d")]),a._v(" "),i("li",[a._v("SELECT LAST_INSERT_ID();                      //插入的自增数据值")]),a._v(" "),i("li",[a._v("union all                                    //合并两个表")]),a._v(" "),i("li",[a._v("group by name                                //去重")]),a._v(" "),i("li",[a._v("distinct name                                //去重")]),a._v(" "),i("li",[a._v("to_days")])]),a._v(" "),i("h2",{attrs:{id:"pm2"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#pm2","aria-hidden":"true"}},[a._v("#")]),a._v(" pm2")]),a._v(" "),i("ol",[i("li",[a._v("pm2 start app.js -i 4                        // 后台运行pm2，启动4个app.js")]),a._v(" "),i("li",[a._v("pm2 start app.js --name my-api               // 命名进程")]),a._v(" "),i("li",[a._v("pm2 list                                     // 显示所有进程状态")]),a._v(" "),i("li",[a._v("pm2 monit                                    // 监视所有进程")]),a._v(" "),i("li",[a._v("pm2 logs                                     // 显示所有进程日志")]),a._v(" "),i("li",[a._v("pm2 stop all                                 // 停止所有进程")]),a._v(" "),i("li",[a._v("pm2 restart all                              // 重启所有进程")]),a._v(" "),i("li",[a._v("pm2 reload all                               // 0秒停机重载进程 (用于 NETWORKED 进程)")]),a._v(" "),i("li",[a._v("pm2 stop 0                                   // 停止指定的进程")]),a._v(" "),i("li",[a._v("pm2 restart 0                                // 重启指定的进程")]),a._v(" "),i("li",[a._v("pm2 startup                                  // 产生 init 脚本 保持进程活着")]),a._v(" "),i("li",[a._v("pm2 web                                      // 运行健壮的 computer API endpoint")]),a._v(" "),i("li",[a._v("pm2 delete 0                                 // 杀死指定的进程")]),a._v(" "),i("li",[a._v("pm2 delete all                               // 杀死全部进程")])]),a._v(" "),i("h2",{attrs:{id:"docker"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#docker","aria-hidden":"true"}},[a._v("#")]),a._v(" docker")]),a._v(" "),i("ol",[i("li",[a._v('docker run -d ubuntu /bin/sh -c "while true; do echo hello world; sleep 1; done"  //创建一个以进程方式运行的容器')]),a._v(" "),i("li",[a._v("docker ps                                    // 查看所有容器")]),a._v(" "),i("li",[a._v("docker logs  容器id/名称                      // 查看容器日志")]),a._v(" "),i("li",[a._v("docker stop  容器id/名称                      // stop容器")]),a._v(" "),i("li",[a._v("docker start/restart  容器id/名称             // start/restart容器")]),a._v(" "),i("li",[a._v("docker rm    容器id/名称                      // 删除容器，需在停止状态下")]),a._v(" "),i("li",[a._v("docker rmi   镜像id")]),a._v(" "),i("li",[a._v("docker port  容器id/名称                      // 查看容器端口")]),a._v(" "),i("li",[a._v("docker top   容器id/名称                      // 查看容器内部运行的进程")]),a._v(" "),i("li",[a._v("docker inspect   容器id/名称                  // 查看Docker的底层信息")]),a._v(" "),i("li",[a._v("docker images                                // 列出本地主机上的镜像")]),a._v(" "),i("li",[a._v("docker pull  XX                              // 下载镜像")]),a._v(" "),i("li",[a._v("docker search  XX                            // 搜索镜像")]),a._v(" "),i("li",[a._v("docker run  XX                               // 使用镜像")]),a._v(" "),i("li",[a._v("touch Dockerfile                             // 新建Dockerfile文件")]),a._v(" "),i("li",[a._v("docker build -t tomcatname                   // 根据Dockerfile创建镜像")]),a._v(" "),i("li",[a._v("docker run -p 8080:8080 tomcatname           // 运行镜像")]),a._v(" "),i("li",[a._v("docker exec -it mysql bash")]),a._v(" "),i("li",[a._v("docker run -i -t --name HelloDocker -p 80:8080 tomcat /bin/bash")]),a._v(" "),i("li",[a._v("docker inspect -f '**.Id' HelloDocker      // 获取id全称")]),a._v(" "),i("li",[a._v("docker cp 本地文件路径 ID全称:容器路径         // 本机和容器之间的文件传输")]),a._v(" "),i("li",[a._v("docker cp smopark.war 38efcb8cb22ff0433667a0a593dab0348453d28dc2a04a72d794f9987540cc45:/usr/local/tomcat/webapps")])])])}],!1,null,null,null);e.default=t.exports}}]);