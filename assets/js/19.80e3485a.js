(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{178:function(e,t,r){"use strict";r.r(t);var s=r(0),n=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("p",[e._v("SEO（Search Engine Optimization）:汉译为搜索引擎优化。")]),e._v(" "),r("p",[e._v("搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),r("p",[e._v("互联网上的信息存储在无数个服务器上，任何搜索引擎要想回答用户的搜索，首先要把网页存在自己本地的服务器上，这靠的就是网络爬虫。它不停的向各种网站发送请求，将所得到的网页存储起来。那么它怎么知道往哪发送请求呢？通常的做法是利用网页之间的链接从一个网页出发，提取出指向其他页面的链接，把它们当成将下次要请求的对象，不停重复这个过程。")]),e._v(" "),r("p",[e._v("seo 本质是一个服务器向另一个服务器发起请求，解析请求内容。但一般来说搜索引擎是不会去执行请求到的js的，而vue的页面是由js渲染出来的")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("由于页面较少，且预渲染相对于SSR比较简单，预渲染可以极大的提高网页访问速度。而且配合一些meat插件，完全可以满足SEO需求。")]),e._v(" "),r("p",[e._v("Prerender服务需要有NodeJs环境支持，如果之前服务器环境没有NodeJs需要先进行安装。")]),e._v(" "),r("p",[e._v("在webpack的配置如下：")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("另：Prerender需要路由使用history模式，使用hash模式会导致失效。")]),e._v(" "),r("p",[e._v("通俗的说：预渲染的本质就是在打包的时候通过插件将js提前执行一遍，然后再将有内容的html放到服务器上，这样爬虫自然可以抓到，首屏的问题也可以得到解决。")]),e._v(" "),e._m(7),e._v(" "),r("p",[e._v("浏览器直接收到经过服务器计算之后的呈现给用户的最终的HTML字符串，浏览器只进行了HTML的解析，以及通过操作系统提供的操纵显示器显示内容的系统调用在显示器上把HTML所代表的图像显示给用户。")]),e._v(" "),r("p",[e._v("好处：前端耗时少（前端只负责将html进行展示），利于SEO")]),e._v(" "),r("p",[e._v("坏处：网络传输数据量大，占用（部分、少部分）服务器运算资源，response 出的数据量会（稍）大点，模板改了前端的交互和样式什么的一样得跟着联动修改")]),e._v(" "),r("p",[e._v("vue2.0提供了"),r("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/ssr.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("服务端渲染"),r("OutboundLink")],1)]),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("在 2.3 发布后我们发布了一份完整的构建 Vue 服务端渲染应用的指南。这份指南非常深入，适合已经熟悉 Vue, webpack 和 Node.js 开发的开发者阅读。请移步 "),r("a",{attrs:{href:"https://ssr.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ssr.vuejs.org"),r("OutboundLink")],1),e._v("。")]),e._v(" "),e._m(9),e._v(" "),r("p",[e._v("从头搭建一个服务端渲染的应用是相当复杂的。幸运的是，我们有一个优秀的社区项目 "),r("a",{attrs:{href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nuxt.js"),r("OutboundLink")],1),e._v(" 让这一切变得非常简单。Nuxt 是一个基于 Vue 生态的更高层的框架，为开发服务端渲染的 Vue 应用提供了极其便利的开发体验。更酷的是，你甚至可以用它来做为静态站生成器。推荐尝试。")]),e._v(" "),r("h2",{attrs:{id:"_3-路由采用html5-history模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-路由采用html5-history模式","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. "),r("a",{attrs:{href:"https://router.vuejs.org/zh-cn/essentials/history-mode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("路由采用html5 history模式"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。")]),e._v(" "),r("p",[e._v("路由的 history 模式可以充分利用 history.pushState API 来完成 URL 跳转而无须重新加载页面。")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"seo是什么？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seo是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" seo是什么？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"seo是根据什么排名？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seo是根据什么排名？","aria-hidden":"true"}},[this._v("#")]),this._v(" seo是根据什么排名？")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("外链总数")]),e._v(" "),r("li",[e._v("域名权威度")]),e._v(" "),r("li",[e._v("深度主题内容（原创性，时效性和易用性）")]),e._v(" "),r("li",[e._v("篇幅长的页面")]),e._v(" "),r("li",[e._v("https")]),e._v(" "),r("li",[e._v("关键词布局")]),e._v(" "),r("li",[e._v("网站服务器的稳定速度快")]),e._v(" "),r("li",[e._v("流量点击")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"为何vue项目的不利于seo？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为何vue项目的不利于seo？","aria-hidden":"true"}},[this._v("#")]),this._v(" 为何vue项目的不利于seo？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"如何优化vue项目的seo？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何优化vue项目的seo？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何优化vue项目的seo？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"_1-页面预渲染prerender（解决seo-首屏问题）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-页面预渲染prerender（解决seo-首屏问题）","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 页面预渲染prerender（解决SEO,首屏问题）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("var PrerenderSpaPlugin = require('prerender-spa-plugin')\n\nvar webpackConfig = merge(baseWebpackConfig, {\nplugins: [\n    //这段代码意思是拷贝static文件至根目录使得渲染的文件可以找到js、css\n    new CopyWebpackPlugin([{\n    from: 'static'\n    }]),\n    new PrerenderSpaPlugin(\n    //将渲染的文件放到dist目录下\n    path.join(__dirname, '../dist'),   \n    //需要预渲染的路由信息\n    [ '/','/introduct','/culture','/Chairman','/president','/fund','/news','/honor' ],\n    {\n    //在一定时间后再捕获页面信息，使得页面数据信息加载完成\n        captureAfterTime: 50000,\n        //忽略打包错误\n        ignoreJSErrors: true,\n        phantomOptions: '--web-security=false',\n        maxAttempts: 10,\n    }\n    ),\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"_2-服务端渲染（后端渲染ssr）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务端渲染（后端渲染ssr）","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 服务端渲染（后端渲染SSR）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("SSR 完全指南")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Nuxt.js")])])}],!1,null,null,null);t.default=n.exports}}]);