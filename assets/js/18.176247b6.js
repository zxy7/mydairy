(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{179:function(t,e,n){"use strict";n.r(e);var s=n(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[e("pre",[e("code",[this._v("<!doctype html>\n<html>\n\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <title>MDN Example - a recursive shortcut to massively modify the DOM</title>\n    <script type=\"text/javascript\">\n        var domQuery = (function () {\n            var aDOMFunc = [\n                Element.prototype.removeAttribute,\n                Element.prototype.setAttribute,\n                CSSStyleDeclaration.prototype.removeProperty,\n                CSSStyleDeclaration.prototype.setProperty\n            ];\n\n            function setSomething(bStyle, sProp, sVal) {\n                var bSet = Boolean(sVal), fAction = aDOMFunc[bSet | bStyle << 1],\n                    aArgs = Array.prototype.slice.call(arguments, 1, bSet ? 3 : 2),\n                    aNodeList = bStyle ? this.cssNodes : this.nodes;\n\n                if (bSet && bStyle) { aArgs.push(\"\"); }\n                for (\n                    var nItem = 0, nLen = this.nodes.length;\n                    nItem < nLen;\n                    fAction.apply(aNodeList[nItem++], aArgs)\n                );\n                this.follow = setSomething.caller;\n                return this;\n            }\n\n            function setStyles(sProp, sVal) { return setSomething.call(this, true, sProp, sVal); }\n            function setAttribs(sProp, sVal) { return setSomething.call(this, false, sProp, sVal); }\n            function getSelectors() { return this.selectors; };\n            function getNodes() { return this.nodes; };\n\n            return (function (sSelectors) {\n                var oQuery = new Function('return arguments.callee.follow.apply(arguments.callee, arguments);');\n                oQuery.selectors = sSelectors;\n                oQuery.nodes = document.querySelectorAll(sSelectors);\n                oQuery.cssNodes = Array.prototype.map.call(oQuery.nodes, function (oInlineCSS) { return oInlineCSS.style; });\n                oQuery.attributes = setAttribs;\n                oQuery.inlineStyle = setStyles;\n                oQuery.follow = getNodes;\n                oQuery.toString = getSelectors;\n                oQuery.valueOf = getNodes;\n                return oQuery;\n            });\n        })();\n\n    <\/script>\n</head>\n\n<body>\n\n    <div class=\"testClass\">Lorem ipsum</div>\n    <p>Some text</p>\n    <div class=\"testClass\">dolor sit amet</div>\n\n    <script type=\"text/javascript\">\n        domQuery('.testClass')\n            .attributes('lang', 'en')('title', 'Risus abundat in ore stultorum')\n            .inlineStyle('background-color', 'black')('color', 'white')('width', '100px')('height', '50px');\n\n    <\/script>\n</body>\n\n</html>")])])])}],!1,null,null,null);e.default=r.exports}}]);